# This workflow will build a .NET project
#  For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: test_release .net

on:
  push:
    branches: [ "master", "test_release" ]
  pull_request:
    branches: [ "master", "test_release" ] 

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: |
        dotnet build --no-restore
        zip --junk-paths my-artifact Readme.md
        
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
  
#     - name: Upload Release Asset
#       id: upload-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#           asset_path: ./p ${{ github.run_number }}.zip
#           asset_name: Release ${{ github.run_number }}.zip
#           asset_content_type: application/zip
      
    - name: Download Release artifact
      id: download
      uses: actions/download-artifact@v2
      with:
        name: ${{ steps.create_release.outputs.upload_url }}
        path: ./my-artifact
        
          
